language: python

python:
    - "3.6"

services:
    - rabbitmq

cache:
    directories:
        - $HOME/.cache
        - $HOME/girder_build/store
        - $HOME/girder_build/data

addons:
    apt:
        packages:
            # Pillow dependencies (see
            # https://pillow.readthedocs.org/en/latest/installation.html)
            - libtiff5-dev
            - libjpeg8-dev
            - zlib1g-dev
            - libfreetype6-dev
            - liblcms2-dev
            - libwebp-dev
            - tcl8.6-dev
            - tk8.6-dev
            - python-tk
            # openjpeg
            - libglib2.0-dev
            - libjpeg-dev
            - libxml2-dev
            - libpng12-dev
            # openslide
            - autoconf
            - automake
            - libtool
            - pkg-config
            - libcairo2-dev
            - libgdk-pixbuf2.0-dev
            - libxml2-dev
            - libsqlite3-dev
            # install vips
            - libvips-tools
            # for building vips
            - build-essential
            - gobject-introspection
            - libcfitsio3-dev
            - libexif-dev
            - libfftw3-dev
            - libgif-dev
            - libgirepository1.0-dev
            - libglib2.0-dev
            - libgsf-1-dev
            - libjpeg-turbo8-dev
            - libmagick++-dev
            - libmatio-dev
            - liborc-0.4-dev
            - libpango1.0-dev
            - libxml2-dev
            - pkg-config
            - python-gi-dev
            # mapnik
            - libgdal-dev
            - gdal-bin
            - python-gdal
            - libmapnik-dev
            - python-mapnik
            # girder worker - not needed; included in travis
            # - rabbitmq-server
            # fuse plugin tests - not needed; included in travis
            # - fuse

before_install:
    # Fix a travis/boto issue.  See
    # https://github.com/travis-ci/travis-ci/issues/7940
    - sudo rm -f /etc/boto.cfg

    - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi

    - GIRDER_VERSION=2.x-maintenance
    - GIRDER_WORKER_VERSION=v0.5.1
    - OVERLAYS_PATH=$TRAVIS_BUILD_DIR
    - GIRDER_PATH=$HOME/girder/girder
    - LARGE_IMAGE_VERSION=master
    - SLICER_CLI_WEB_VERSION=master
    - HISTOGRAM_VERSION=master
    - COLORMAPS_VERSION=master
    - LIB_BUILD_PATH=$HOME/lib_build
    - GIRDER_BUILD_PATH=$HOME/girder_build
    - GIRDER_WORKER_PATH=$HOME/girder/girder_worker
    - LARGE_IMAGE_PATH=$GIRDER_PATH/plugins/large_image
    - SLICER_CLI_WEB_PATH=$GIRDER_PATH/plugins/slicer_cli_web
    - HISTOGRAM_PATH=$GIRDER_PATH/plugins/histogram
    - COLORMAPS_PATH=$GIRDER_PATH/plugins/colormaps

    - mkdir -p $HOME/.cache/node_modules || true
    - ln -sf $HOME/.cache/node_modules .
    - nvm install v8
    - npm install -g npm
    - npm install -g npm-install-retry
    - npm --version
    - npm prune

    - git clone https://github.com/girder/girder.git $GIRDER_PATH && git -C $GIRDER_PATH checkout $GIRDER_VERSION
    - CACHE=$HOME/.cache CMAKE_VERSION=3.4.3 CMAKE_SHORT_VERSION=3.4 source $GIRDER_PATH/scripts/install_cmake.sh
    - cmake --version

    - if [ -n "${PY3}" ]; then export MONGO_VERSION=3.6.2; else export MONGO_VERSION=3.4.10; fi
    - source $GIRDER_PATH/scripts/install_mongo.sh
    - mkdir /tmp/db
    - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
    - mongod --version

    - LIBTIFF_VERSION=4.0.3 LIBTIFF_DIR=/old OPENJPEG_VERSION=2.1 OPENJPEG_FILE=version.2.1.tar.gz OPENJPEG_DIR="openjpeg-version.2.1"
    - mkdir -p $LIB_BUILD_PATH

    # There is an issue with the OpenJPEG library included with Ubuntu 14.04,
    # so install it from source.
    - cd $LIB_BUILD_PATH
    - if [[ ! -d $OPENJPEG_DIR ]]; then
          wget -O "openjpeg-$OPENJPEG_VERSION.tar.gz" "https://github.com/uclouvain/openjpeg/archive/$OPENJPEG_FILE" &&
          tar -zxpf "openjpeg-$OPENJPEG_VERSION.tar.gz" ;
      fi
    - cd "$OPENJPEG_DIR"
    # - wget -O openjpeg-1.5.2.tar.gz https://github.com/uclouvain/openjpeg/archive/version.1.5.2.tar.gz
    # - tar -zxf openjpeg-1.5.2.tar.gz
    # - cd openjpeg-version.1.5.2
    - cmake .
    - make -j 3
    - sudo make install
    - sudo ldconfig
    # - cd $LARGE_IMAGE_PATH

    # Build libtiff so it will use our openjpeg
    - cd $LIB_BUILD_PATH
    - if [[ ! -d "tiff-$LIBTIFF_VERSION" ]]; then
          wget -O "tiff-$LIBTIFF_VERSION.tar.gz" "http://download.osgeo.org/libtiff$LIBTIFF_DIR/tiff-$LIBTIFF_VERSION.tar.gz" &&
          tar -zxpf "tiff-$LIBTIFF_VERSION.tar.gz" ;
      fi
    - cd "tiff-$LIBTIFF_VERSION"
    - ./configure
    - make -j 3
    - sudo make install
    - sudo ldconfig
    # - cd $LARGE_IMAGE_PATH

    # Build OpenSlide ourselves so that it will use our libtiff
    - cd $LIB_BUILD_PATH
    - if [[ ! -d openslide-3.4.1 ]]; then
          wget -O openslide-3.4.1.tar.gz https://github.com/openslide/openslide/archive/v3.4.1.tar.gz &&
          tar -zxpf openslide-3.4.1.tar.gz ;
      fi
    - cd openslide-3.4.1
    - autoreconf -i
    - ./configure
    - make -j 3
    - sudo make install
    - sudo ldconfig
    # - cd $LARGE_IMAGE_PATH

    - cd $OVERLAYS_PATH

    - git clone https://github.com/girder/girder_worker.git $GIRDER_WORKER_PATH && git -C $GIRDER_WORKER_PATH checkout $GIRDER_WORKER_VERSION

    - git clone https://github.com/girder/large_image.git $LARGE_IMAGE_PATH && git -C $LARGE_IMAGE_PATH checkout $LARGE_IMAGE_VERSION

    - cp $LARGE_IMAGE_PATH/plugin_tests/test_files/girder_worker.cfg $GIRDER_WORKER_PATH/girder_worker/worker.local.cfg
    # - python $GIRDER_WORKER_PATH/scripts/install_requirements.py # --mode=dev
    # - pip install --no-cache-dir -U -e $GIRDER_WORKER_PATH'[girder_io]'
    # Change in travis in 2017-09 require sudo for pip2 when in the python3 main
    # environment
    - if [ -n "${PY3}" ]; then
          sudo pip2 install --no-cache-dir -U setuptools &&
          sudo pip2 install --no-cache-dir -U $GIRDER_WORKER_PATH'[girder_io]' ;
      else
          pip install --no-cache-dir -U $GIRDER_WORKER_PATH'[girder_io]' ;
      fi

    - git clone https://github.com/girder/slicer_cli_web.git $SLICER_CLI_WEB_PATH && git -C $SLICER_CLI_WEB_PATH checkout $SLICER_CLI_WEB_VERSION

    - git clone https://github.com/cj-abcs/histogram.git $HISTOGRAM_PATH && git -C $HISTOGRAM_PATH checkout $HISTOGRAM_VERSION

    - git clone https://github.com/cj-abcs/colormaps.git $COLORMAPS_PATH && git -C $COLORMAPS_PATH checkout $COLORMAPS_VERSION

install:
    - cd $GIRDER_PATH
    - pip install --no-cache-dir -U -r requirements-dev.txt -e .[mount]
    - cd $LARGE_IMAGE_PATH
    - pip install --no-cache-dir 'numpy>=1.12.1'
    # Install all extras (since "girder-install plugin" does not provide a mechanism to specify them
    # Trusty supports gdal 1.10.0; don't test mapnik on Python 3 (for now)
    - if [ -n "${PY3}" ]; then
          pip install -e $LARGE_IMAGE_PATH[memcached,openslide] ;
      else
          export CPLUS_INCLUDE_PATH=/usr/include/gdal
          export C_INCLUDE_PATH=/usr/include/gdal
          pip install gdal==1.10.0 &&
          pip install -e $LARGE_IMAGE_PATH[memcached,openslide,mapnik] ;
      fi

    - cd $GIRDER_PATH
    - pip install -U 'celery>=4,<4.2'
    - pip install --upgrade 'git+https://github.com/cdeepakroy/ctk-cli'
    - pip install -U --upgrade-strategy eager -r $SLICER_CLI_WEB_PATH/requirements.txt
    - pip install -U --upgrade-strategy eager -e .[worker]
    - pip install -U --upgrade-strategy eager -r $HISTOGRAM_PATH/requirements.txt

    - girder-install plugin --symlink $OVERLAYS_PATH
    - ls -l $GIRDER_PATH/plugins

    - npm-install-retry
    - BABEL_ENV=cover NYC_CWD="$OVERLAYS_PATH" girder-install web --plugins=slicer_cli_web,large_image,colormaps,histogram,overlays --dev

script:
    - mkdir -p $GIRDER_BUILD_PATH
    - cd $GIRDER_BUILD_PATH
    - cmake -DPYTHON_VERSION:STRING=${TRAVIS_PYTHON_VERSION} -DRUN_CORE_TESTS:BOOL="OFF" -DTEST_PLUGINS:STRING="overlays" $GIRDER_PATH
    - make -j 3
    - JASMINE_TIMEOUT=15000 ctest -VV -j 3

after_success:
    - bash <(curl -s https://codecov.io/bash) -R $OVERLAYS_PATH -s $GIRDER_PATH
